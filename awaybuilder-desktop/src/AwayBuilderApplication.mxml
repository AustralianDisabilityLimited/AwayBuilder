<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:components="awaybuilder.view.components.*"
	frameRate="60" backgroundFrameRate="5"
	minWidth="1000" minHeight="720" 
	backgroundColor="0x333333"
	visible="false" showStatusBar="false"
	invoke="invokeHandler(event)" 
	preinitialize="preinitializeHandler(event)"
	applicationComplete="applicationCompleteHandler(event)" resize="resizeHandler(event)"
	>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Style source="desktop_styles.css"/>
	
	<components:CoreEditor id="coreEditor" top="0" right="0" bottom="0" left="0"/>
	
	<fx:Script><![CDATA[
		import awaybuilder.desktop.DesktopAppContext;
		import awaybuilder.desktop.controller.events.OpenFromInvokeEvent;
		
		import mx.events.FlexEvent;
		import mx.events.ResizeEvent;

        private var _context:DesktopAppContext;

		public var splashScreen:SplashScreen;
		
        private function preinitializeHandler(event:FlexEvent):void
        {
			splashScreen = new SplashScreen();
			this.width = Capabilities.screenResolutionX;
			this.height = Capabilities.screenResolutionY;
            this._context = new DesktopAppContext(DisplayObjectContainer(this.systemManager));
        }

        private function invokeHandler(event:InvokeEvent):void
        {
            if(event.arguments.length == 1)
            {
                const extensions:Vector.<String> = new <String>["awd"];
                var filePath:String = event.arguments[0];
                var file:File = new File(filePath);
                if(file.exists && extensions.indexOf(file.extension) >= 0)
                {
                    this._context.eventDispatcher.dispatchEvent(new OpenFromInvokeEvent(OpenFromInvokeEvent.OPEN_FROM_INVOKE, file));
                }
            }
        }
		
		protected function applicationCompleteHandler(event:FlexEvent):void
		{
//			this.visible = true;
//			this.maximize();
		}
		
		protected function resizeHandler(event:ResizeEvent):void
		{
			coreEditor.validateNow();
		}
		
	]]></fx:Script>
	
</s:WindowedApplication>