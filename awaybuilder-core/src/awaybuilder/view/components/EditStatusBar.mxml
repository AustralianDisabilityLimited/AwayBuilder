<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="zoom",type="awaybuilder.view.components.events.ToolBarZoomEvent")]
	</fx:Metadata>
	
	<s:Spacer width="100%"/>
	
	<s:Button id="zoomOutButton" styleName="toolbarButton" toolTip="Zoom Out" autoRepeat="true"
			  buttonDown="zoomOutButton_clickHandler(event)"/>
	<s:HSlider id="zoomSlider" minimum="0.00001" maximum="0.99999" stepSize="0.001" value="0.75"
		liveDragging="true" focusEnabled="false"
		dataTipFormatFunction="{zoomSlider_dataTipFormat}"
		change="zoomSlider_changeHandler(event)"/>
	<s:Button id="zoomInButton" styleName="toolbarButton" toolTip="Zoom In" autoRepeat="true"
		buttonDown="zoomInButton_clickHandler(event)"/>
	
	<fx:Script>
	<![CDATA[
		import awaybuilder.utils.scene.CameraManager;
		import awaybuilder.view.components.events.ToolBarZoomEvent;
		
		import mx.events.FlexEvent;
		

		public function get zoom():Number
		{
			if(!this.zoomSlider)
			{
				return 1000;
			}
			return this.zoomSlider.value;
		}

		public function set zoom(value:Number):void
		{
			if(this.zoom == value)
			{
				return;
			}
			if (value < this.zoomSlider.minimum) return;
			if (value > this.zoomSlider.maximum) return;
			trace("zoomSliderSet:"+value);
			this.zoomSlider.value = value;
		}

		private function zoomSlider_dataTipFormat(value:Number):String
		{
			return int(CameraManager.log2(value)*-2000).toString();
		}
		
		protected function zoomInButton_clickHandler(event:FlexEvent):void
		{
			this.dispatchEvent(new ToolBarZoomEvent(ToolBarZoomEvent.ZOOM_IN));
		}
		
		protected function zoomOutButton_clickHandler(event:FlexEvent):void
		{
			this.dispatchEvent(new ToolBarZoomEvent(ToolBarZoomEvent.ZOOM_OUT));
		}
		
		protected function zoomSlider_changeHandler(event:Event):void
		{
			this.dispatchEvent(new ToolBarZoomEvent(ToolBarZoomEvent.ZOOM_TO, this.zoom));
		}

	]]>
	</fx:Script>
</s:SkinnableContainer>