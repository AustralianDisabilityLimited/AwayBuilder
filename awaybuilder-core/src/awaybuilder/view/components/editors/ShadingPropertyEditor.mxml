<?xml version="1.0" encoding="utf-8"?>
<editors:EditorBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:components="awaybuilder.view.components.*" 
					xmlns:controls="awaybuilder.view.components.controls.*"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:editors="awaybuilder.view.components.editors.*" 
					currentState="{_asset.type}"
					>
	<fx:Declarations>
	</fx:Declarations>
	<editors:states>
		<s:State name="BasicAmbientMethod"/>
		<s:State name="EnvMapAmbientMethod"/>
		<s:State name="BasicDiffuseMethod"/>
		<s:State name="DepthDiffuseMethod"/>
		<s:State name="GradientDiffuseMethod"/>
		<s:State name="WrapDiffuseMethod"/>
		<s:State name="LightMapDiffuseMethod"/>
		<s:State name="CelDiffuseMethod"/>
		<s:State name="SubsurfaceScatterDiffuseMethod"/>
		<s:State name="BasicSpecularMethod"/>
		<s:State name="AnisotropicSpecularMethod"/>
		<s:State name="PhongSpecularMethod"/>
		<s:State name="CelSpecularMethod"/>
		<s:State name="FresnelSpecularMethod"/>
		<s:State name="BasicNormalMethod"/>
		<s:State name="HeightMapNormalMethod"/>
		<s:State name="SimpleWaterNormalMethod"/>
	</editors:states>
	<fx:Script><![CDATA[
		import awaybuilder.model.vo.scene.AssetVO;
		import awaybuilder.model.vo.scene.ShadingMethodVO;
		import awaybuilder.model.vo.scene.TextureVO;
		import awaybuilder.view.components.controls.events.ExtendedDropDownEvent;
		import awaybuilder.view.components.editors.events.PropertyEditorEvent;
		
		import spark.events.IndexChangeEvent;
		
		[Bindable]
		private var _asset:ShadingMethodVO;
		
		override protected function validate(asset:Object):void
		{
			if( !(asset is ShadingMethodVO) ) return;
			_asset = ShadingMethodVO(asset).clone();
		}
		
		private function stepper_changeHandler(event:Event):void 
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SHADINGMETHOD_STEPPER_CHANGE, _asset, true));
		}
		private function value_changeHandler(event:Event):void 
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SHADINGMETHOD_CHANGE, _asset, true));
		}
		
		protected function secondaryNormalMapDropDownList_changeHandler(event:IndexChangeEvent):void
		{
		}
		
		protected function secondaryNormalMapDropDownList_addNewItemHandler(event:ExtendedDropDownEvent):void
		{
		}
		
		protected function lightMapDropDownList_changeHandler(event:IndexChangeEvent):void
		{
		}
		
		protected function lightMapDropDownList_addNewItemHandler(event:ExtendedDropDownEvent):void
		{
		}
		
		protected function gradientDropDownList_changeHandler(event:IndexChangeEvent):void
		{
		}
		
		protected function gradientDropDownList_addNewItemHandler(event:ExtendedDropDownEvent):void
		{
		}
		
		protected function environmentMapDropDownList_changeHandler(event:IndexChangeEvent):void
		{
		}
		
		protected function environmentMapDropDownList_addNewItemHandler(event:ExtendedDropDownEvent):void
		{
		}
		private function dropDownIconFunction(item:TextureVO):Object 
		{
			return item.bitmapData;
		}
		
		private function dropDownLabelFunction(item:TextureVO):Object 
		{
			return item.name.split("/").pop();
		}
		
		protected function baseSpecularMethodDropdownList_changeHandler(event:IndexChangeEvent):void
		{
			// TODO Auto-generated method stub
			
		}
		
		protected function baseDiffuseMethodDropdownList_changeHandler(event:IndexChangeEvent):void
		{
			// TODO Auto-generated method stub
			
		}
		
		protected function blendModeDropDownList_changeHandler(event:IndexChangeEvent):void
		{
			// TODO Auto-generated method stub
			
		}
		
		protected function editSharedObjectButton_clickHandler(event:MouseEvent):void
		{
			dispatchEvent(new PropertyEditorEvent(PropertyEditorEvent.SHOW_CHILD_PROPERTIES, _asset.baseMethod, true));
		}
		
	]]></fx:Script>
	
	<s:Group width="100%" top="0">
		<s:Rect left="0" right="0" top="3" bottom="3">
			<s:fill>
				<s:SolidColor color="0x111111" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<s:HGroup width="100%" verticalAlign="middle" paddingLeft="2" paddingRight="2" paddingTop="4" paddingBottom="4">
			<s:Button id="editParentObjectButton" styleName="editParentObjectButtonStyle" visible="{prevSelected.length>0}"
					  width="32" height="32" click="editParentObjectButton_clickHandler(event)"/>
			<s:Label width="100%" text="{_asset.type}" fontWeight="bold" fontSize="14"/>
		</s:HGroup>
	</s:Group>
	
	<s:VGroup width="100%" paddingLeft="10" includeIn="EnvMapAmbientMethod" enabled="false">
		<s:HGroup width="100%">
			<s:Label text="Environment Map" fontWeight="bold"/>
			<controls:HorizontalFormSeparator/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<controls:ExtendedDropDownList id="environmentMapDropDownList" width="100%" height="40" requireSelection="true"
										   itemRenderer="awaybuilder.view.components.editors.renderers.TextureItemRenderer"
										   dataProvider="{cubeTextures}" labelFunction="{dropDownLabelFunction}" iconFunction="{dropDownIconFunction}"
										   newItemLabel="New Cube Texture"
										   change="environmentMapDropDownList_changeHandler(event)"
										   addNewItem="environmentMapDropDownList_addNewItemHandler(event)"
										   />
			<s:Button styleName="editSharedObjectButtonStyle" width="23" height="100%" click=""/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup width="100%" paddingLeft="10" includeIn="GradientDiffuseMethod" enabled="false">
		<s:HGroup width="100%">
			<s:Label text="Gradient" fontWeight="bold"/>
			<controls:HorizontalFormSeparator/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<controls:ExtendedDropDownList id="gradientDropDownList" width="100%" height="40"  requireSelection="true"
										   itemRenderer="awaybuilder.view.components.editors.renderers.TextureItemRenderer"
										   dataProvider="{textures}" labelFunction="{dropDownLabelFunction}" iconFunction="{dropDownIconFunction}"
										   newItemLabel="New Texture"
										   change="gradientDropDownList_changeHandler(event)"
										   addNewItem="gradientDropDownList_addNewItemHandler(event)"
										   />
			<s:Button styleName="editSharedObjectButtonStyle" width="23" height="100%" click=""/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup width="100%" paddingLeft="10" includeIn="LightMapDiffuseMethod" enabled="false">
		<s:HGroup width="100%">
			<s:Label text="Light Map" fontWeight="bold"/>
			<controls:HorizontalFormSeparator/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<controls:ExtendedDropDownList id="lightMapDropDownList" width="100%" height="40" requireSelection="true"
										   itemRenderer="awaybuilder.view.components.editors.renderers.TextureItemRenderer"
										   dataProvider="{textures}" labelFunction="{dropDownLabelFunction}" iconFunction="{dropDownIconFunction}"
										   change="lightMapDropDownList_changeHandler(event)"
										   addNewItem="lightMapDropDownList_addNewItemHandler(event)"
										   newItemLabel="New Texture" />
			<s:Button styleName="editSharedObjectButtonStyle" width="23" height="100%" click=""/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup width="100%" paddingLeft="10" includeIn="SimpleWaterNormalMethod" enabled="false">
		<s:HGroup width="100%">
			<s:Label text="Secondary Normal Map" fontWeight="bold"/>
			<controls:HorizontalFormSeparator/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<controls:ExtendedDropDownList id="secondaryNormalMapDropDownList" width="100%" height="40" requireSelection="true"
										   itemRenderer="awaybuilder.view.components.editors.renderers.TextureItemRenderer"
										   dataProvider="{textures}" labelFunction="{dropDownLabelFunction}" iconFunction="{dropDownIconFunction}"
										   change="secondaryNormalMapDropDownList_changeHandler(event)"
										   addNewItem="secondaryNormalMapDropDownList_addNewItemHandler(event)"
										   newItemLabel="New Texture"/>
			<s:Button styleName="editSharedObjectButtonStyle" width="23" height="100%" click=""/>
		</s:HGroup>
	</s:VGroup>
	<s:Form width="100%" skinClass="awaybuilder.view.skins.PropertyFormSkin">
		<s:FormItem label="Warp Factor" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="WrapDiffuseMethod">
			<controls:DragableNumericStepper id="valueStepper" value="@{_asset.value}" stepSize="0.1" snapInterval="0.01" minimum="0" maximum="1"
											 change="value_changeHandler(event)" />
		</s:FormItem>
		<s:FormItem label="Blend Mode" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="LightMapDiffuseMethod">
			<s:DropDownList id="blendModeDropDownList" requireSelection="true" enabled="false" selectedItem="@{_asset.blendMode}"
							width="100%" change="blendModeDropDownList_changeHandler(event)"
							>
				<s:dataProvider>
					<s:ArrayList>
						<fx:String>Add</fx:String>
						<fx:String>Multiply</fx:String>
					</s:ArrayList>
				</s:dataProvider>
			</s:DropDownList>
		</s:FormItem>
		
		<s:FormItem label="Specular Cutoff" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="CelSpecularMethod">
			<controls:DragableNumericStepper stepSize="1" snapInterval="1" minimum="1" maximum="24"
											  width="40" value="@{_asset.value}"
											  change="stepper_changeHandler(event)" />
		</s:FormItem>
		<s:FormItem label="Levels" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="CelDiffuseMethod">
			<controls:DragableNumericStepper stepSize="1" snapInterval="1" minimum="1" maximum="24"
											  width="40" value="@{_asset.value}"
											  change="stepper_changeHandler(event)" />
		</s:FormItem>
		<s:FormItem label="Smoothness" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="CelDiffuseMethod">
			<controls:DragableNumericStepper stepSize="0.1" snapInterval="0.01" minimum="0" maximum="1"
											 width="40" value="@{_asset.smoothness}"
											 change="stepper_changeHandler(event)" />
		</s:FormItem>
		
		<s:FormItem label="Base Method" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="LightMapDiffuseMethod,CelDiffuseMethod">
			<s:DropDownList id="baseDiffuseMethodDropdownList" requireSelection="true" selectedItem="{_asset.baseMethod}"
							width="100%" change="baseDiffuseMethodDropdownList_changeHandler(event)"
							>
			</s:DropDownList>
			<s:Button styleName="editSharedObjectButtonStyle" width="23" height="100%" click="editSharedObjectButton_clickHandler(event)"/>
		</s:FormItem>
		
		
		<s:FormItem label="Based on Surface" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="FresnelSpecularMethod">
			<s:CheckBox change="value_changeHandler(event)" selected="@{_asset.basedOnSurface}" />
		</s:FormItem>
		<s:FormItem label="Fresnel Power" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="FresnelSpecularMethod">
			<controls:DragableNumericStepper stepSize="0.1" snapInterval="0.1" minimum="0" maximum="10"
											 width="40" value="@{_asset.fresnelPower}"
											 change="stepper_changeHandler(event)" />
		</s:FormItem>
		<s:FormItem label="Normal Reflectance" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="FresnelSpecularMethod">
			<controls:DragableNumericStepper stepSize="0.01" snapInterval="0.001" minimum="0" maximum="1"
											 width="40" value="@{_asset.value}"
											 change="stepper_changeHandler(event)" />
		</s:FormItem>
		
		<s:FormItem label="Base Method" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="CelSpecularMethod,FresnelSpecularMethod">
			<s:DropDownList id="baseSpecularMethodDropdownList" requireSelection="true" selectedItem="{_asset.baseMethod}"
							width="100%" change="baseSpecularMethodDropdownList_changeHandler(event)"
							>
			</s:DropDownList>
			<s:Button styleName="editSharedObjectButtonStyle" width="23" height="100%" click="editSharedObjectButton_clickHandler(event)"/>
		</s:FormItem>
		
	<!--	<s:FormItem label="World Width" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="HeightMapNormalMethod">
			<controls:DragableNumericStepper stepSize="1" snapInterval="0.1" minimum="0" maximum="100" width="40" value="@{_asset.width}"
											 change="stepper_changeHandler(event)" />
		</s:FormItem>
		<s:FormItem label="World Height" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="HeightMapNormalMethod">
			<controls:DragableNumericStepper stepSize="1" snapInterval="0.1" minimum="0" maximum="100" width="40" value="@{_asset.height}"
											 change="stepper_changeHandler(event)" />
		</s:FormItem>
		<s:FormItem label="World Depth" skinClass="awaybuilder.view.skins.PropertyFormItemSkin" width="100%" includeIn="HeightMapNormalMethod">
			<controls:DragableNumericStepper stepSize="1" snapInterval="0.1" minimum="0" maximum="100" width="40" value="@{_asset.depth}"
											 change="stepper_changeHandler(event)" />
		</s:FormItem>-->
		
	</s:Form>
	
</editors:EditorBase>
